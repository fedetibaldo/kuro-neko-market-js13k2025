import { drawSvg } from "../core/draw-svg";
import { Vector } from "../core/vector";
import { Glyph, GlyphArgs } from "./glyph";

const digits = {
	0: "M4 8C1.09 7.97.78 1 4 1 7.2 1 6.92 8 4 8Z",
	1: "M2.5 2.74C3.37 2 3.83 1.51 4.38 1.08c.32-.26.27.34.27.59.01.51.03 4.7 0 6.32",
	2: "M1.43803 3.36837c.00736-.98725.4048-2.07742 2.08064-2.33569 1.45981-.22497 2.57411.86319 2.6297 2.09039.08067 1.78104-2.21309 2.72833-2.88899 3.10276-.43995.24373-1.2998.84366-1.53991 1.08738-.32988.33746-.34269.61523-.31995.62805.14361.08098 1.05579.05116 1.44921.04687 1.7198-.01875 3.75885-.03565 3.75885-.03565",
	3: "M1.806 6.41c.482 1.604 3 2.186 4.072.6.325-.481.508-1.217 0-1.908-.428-.581-1.104-.846-1.767-.833-.146.003-.146-.032 0-.038.674-.026 1.434-.25 1.767-.894.289-.562.19-1.251-.346-1.779-.63-.62-2.527-.89-3.338.512",
	4: "M3 1.02S2.06 4.84 1.95 5.2c-.04.14-.18.18.53.17l3.59.02m0 0V1m0 4.39v2.6",
	5: "M5.62082 1.02388c-1.16137-.00224-1.39112-.0019-2.58733.00034-.12723.00024-.25756.03601-.28346.16057-.20404.98132-.20404 2.01053-.47219 3.2871-.02136.10172.03402.18206.12279.23614.11552.07039.24636-.02143.34522-.11378 1.17429-1.09685 3.09264-.24481 3.06766 1.36396-.04065 2.61773-2.73291 2.2383-3.62723 1.36896",
	6: "M5.72 1.04c-1.06-.06-3.04.62-3.6 3.25-.13.57-.07 1.17-.07 1.69m0 0c0 2.73 3.96 2.55 3.91.02-.04-2.4-3.84-2.07-3.91-.02Z",
	7: "M1.95 1.06c1.47 0 2.27 0 3.86-.04.26 0 .24.1.24.2 0 1.56-2.85 4.29-2.85 6.48v.28",
	8: "M3.998 4.26c-2.763 0-2.667 3.734.004 3.734S6.76 4.26 3.998 4.26Zm0 0c-2.292 0-2.353-3.254.004-3.254s2.288 3.253-.004 3.253Z",
	9: "M2.373 7.93c2.47.053 4.183-2.477 3.3-5.581m-1.765-1.28c-2.375 0-2.468 3.39 0 3.365 2.468-.026 2.375-3.365 0-3.365Z",
} as const;

export type DigitValue = keyof typeof digits;

export type DigitArgs = Omit<GlyphArgs, "path"> & {
	value: DigitValue;
};

export class Digit extends Glyph {
	size = new Vector(8, 9);
	value: DigitValue;

	constructor({ value, ...rest }: DigitArgs) {
		super({ path: digits[value], ...rest });
		this.value = value;
	}

	setValue(value: DigitValue) {
		this.path = digits[value];
		this.value = value;
	}
}
